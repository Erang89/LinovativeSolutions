@using System.Reflection
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject LazyAssemblyLoader AssemblyLoader

<Router AppAssembly="@typeof(App).Assembly"
        AdditionalAssemblies="lazyLoadedAssemblies"
        OnNavigateAsync="OnNavigateAsync">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {

    private List<Assembly> lazyLoadedAssemblies = new(){
        typeof(RegisterShared).Assembly
    };

    private async Task OnNavigateAsync(Microsoft.AspNetCore.Components.Routing.NavigationContext args)
    {
        if (args.Path.StartsWith("pos", StringComparison.OrdinalIgnoreCase))
        {
            var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[]
            {
                "Linovative.Frontend.POSComponents.dll"
            });

            lazyLoadedAssemblies.AddRange(assemblies);
        }
    }
}
